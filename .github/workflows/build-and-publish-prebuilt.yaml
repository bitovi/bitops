name: Build and Publish preconfigured images

on:
  workflow_dispatch: 
    inputs:
      image_tag:
        description: Specifies the tag that will be published
        type: string
        default: base
        required: true
  push:
    # TODO: Remove debugging
    branches: [ main, fix/omnibus-dev-image ]
    tags:
      - "*"
    paths:
      - "prebuilt-config/bitops-tag.yaml"
      - ".github/workflows/build-and-publish-prebuilt.yaml"

jobs:
  build-publish-dev:
    name: Build and push 'dev' omnibus Docker image
    runs-on: ubuntu-latest
    # TODO: Replace branch with 'main'
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    - uses: cuchi/jinja2-action@v1.2.0
      with:
        template: prebuilt-config/dockerfile.template
        output_file: ./Dockerfile
        variables: |
          bitops_base=dev-base
    - name: Copy bitops.config.yaml into the project root folder
      run: cp ./prebuilt-config/omnibus/bitops.config.yaml ./bitops.config.yaml
    - name: Publish Omnibus dev Docker Image (Push)
      env:
        REGISTRY_URL: "bitovi/bitops"
        DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME}}
        DOCKER_PASS: ${{ secrets.DOCKERHUB_PASSWORD}}
        # 'main' branch 'omnibus' build, publish 'dev' Docker tag
        IMAGE_TAG: dev
      run: |
        echo "running scripts/ci/publish.sh"
        ./scripts/ci/publish.sh

  publish-prebuilds:
    name: Publish image for ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        target:
          - aws-ansible
          - aws-helm
          - aws-terraform
          - omnibus

    steps:
    - uses: actions/checkout@v2
    
    # ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~- #
    #                   PUSH                   #
    # ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~- # 
    # Loads VERSION_TAG from prebuilt-config/bitops-tag.yaml
    - name: Parse bitops_base from yaml
      id: yaml-data
      uses: KJ002/read-yaml@main
      with:
        file: 'prebuilt-config/bitops-tag.yaml'    
        key-path: '["tags", "plugins_base"]'
      if: github.event_name == 'push'
    
    - name: Update VERSION_TAG with input (Push)
      run: |
        echo "VERSION_TAG=${{ steps.yaml-data.outputs.data }}" >> $GITHUB_ENV
      if: github.event_name == 'push'
    
     # Apply jinja to tag
    - uses: cuchi/jinja2-action@v1.2.0
      with:
        template: prebuilt-config/dockerfile.template
        output_file: prebuilt-config/${{ matrix.target }}/Dockerfile
        data_file: prebuilt-config/bitops-tag.yaml
        data_format: yaml
      if: github.event_name == 'push'

    # ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~- #
    #           Workflow dispatch              #
    # ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~- # 
    # Loads VERSION_TAG from inputs
    - name: Update VERSION_TAG with input (workflow_dispatch)
      run: |
        echo "VERSION_TAG=${{ github.event.inputs.image_tag}}" >> $GITHUB_ENV
      if: github.event_name == 'workflow_dispatch'

    - uses: cuchi/jinja2-action@v1.2.0
      with:
        template: prebuilt-config/dockerfile.template
        output_file: prebuilt-config/${{ matrix.target }}/Dockerfile
        strict: true
        variables: |
          bitops_base=${{ env.VERSION_TAG }}
      if: github.event_name == 'workflow_dispatch'

    # ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~- #
    #                   ALL                    #
    # ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~- # 
    # Move the dockerfile and bitops.config.yaml into the project root folder
    - name: Copy Dockerfile and bitops.config.yaml into the project root folder
      run: |
        cp ./prebuilt-config/${{ matrix.target }}/Dockerfile ./Dockerfile
        cp ./prebuilt-config/${{ matrix.target }}/bitops.config.yaml ./bitops.config.yaml

    - name: Publish Docker Image (Release)
      env:
        REGISTRY_URL: "bitovi/bitops"
        DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME}}
        DOCKER_PASS: ${{ secrets.DOCKERHUB_PASSWORD}}
        # On a versioned release push '2.0.0-omnibus', '2.0.0-aws-ansible', etc Docker tags
        IMAGE_TAG: ${{ env.VERSION_TAG }}-${{ matrix.target }}
      run: |
        echo "running scripts/ci/publish.sh"
        ./scripts/ci/publish.sh
      if: github.event_name == 'release'
