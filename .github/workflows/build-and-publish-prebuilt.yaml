name: Build and Publish preconfigured images

on:
  workflow_dispatch: {}
  push:
    branches: [ plugins ]
    tags:
      - "*"
    paths:
      - "prebuilt-config/bitops-tag.yaml"
      - ".github/workflows/build-and-publish-prebuilt.yaml"
  
jobs:
  publish-prebuilds:
    name: Publish for ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        target:
          - aws-ansible  
          - aws-helm
          - aws-terraform
          - omnibus

    steps:
    - uses: actions/checkout@v2
    
    # Apply jinja to tag
    - uses: cuchi/jinja2-action@v1.2.0
      with:
        template: prebuilt-config/dockerfile.template
        output_file: prebuilt-config/${{ matrix.target }}/Dockerfile
        data_file: prebuilt-config/bitops-tag.yaml
        data_format: yaml
    
    
    - uses: CumulusDS/get-yaml-paths-action@v0.1.0
      with:
        file: prebuilt-config/bitops-tag.yaml
      id: tags

    - name: Debugging event name
      run: |
        echo ${{ env.bitops_base }}
        echo ${{ steps.tags.outputs.tags.bitops_base }}
        echo IMAGE_TAG=$(cat prebuilt-config/bitops-tag.yaml| shyaml get-value tags.bitops_base) >> $GITHUB_ENV
        echo ${{ env.IMAGE_TAG }}


    # Move the dockerfile and bitops.config.yaml into the project root folder
    # - name: Copy Dockerfile and bitops.config.yaml into the project root folder
    #   run: |
    #     cp ./prebuilt-config/${{ matrix.target }}/Dockerfile ./Dockerfile
    #     cp ./prebuilt-config/${{ matrix.target }}/bitops.config.yaml ./bitops.config.yaml
        
    #     echo "#~# Dockerfile #~#"
    #     cat ./Dockerfile
        
    #     echo "#~# bitops.config.yaml #~#"
    #     cat ./bitops.config.yaml
        
    # - name: Publish Docker Image
    #   env:
    #     REGISTRY_URL: "bitovi/bitops"
    #     DEFAULT_BRANCH: "plugins"
    #     DOCKER_USER: ${{ secrets.DOCKER_USER}}
    #     DOCKER_PASS: ${{ secrets.DOCKER_PASS}}
    #     IMAGE_TAG: ${{ matrix.target }}
    #     IMAGE_PREFIX: 2.0.0
    #     IMAGE_POSTFIX: "PR"
    #   run: |
    #     echo "running scripts/ci/publish.sh"
    #     ./scripts/ci/publish.sh
